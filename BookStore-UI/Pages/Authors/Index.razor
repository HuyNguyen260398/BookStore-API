@page "/authors/"

@inject IAuthorRepository _repo
@inject NavigationManager _navManager

<h3 class="card-title">Author List</h3>

<br />
<hr />
<br />

@if (Model == null)
{
    <LoadingMessage Message="Loading data..." />
}
else
{
    <AuthorizeView Roles="Administrator">
        <a href="/authors/create" class="btn btn-primary">
            <span class="oi oi-plus"></span>
            Create New Author
        </a>
    </AuthorizeView>

    <br />
    <br />
    <br />

    @if (Model.Count < 1)
    {
        <LoadingMessage Message="There are no authors available.
                        Please click 'Create Author' to add new one." />
    }
    else
    {
        <table class="tabble table-responsive">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var author in Model)
                {
                    <tr>
                        <td>@author.Firstname</td>
                        <td>@author.Lastname</td>
                        <td>
                            <a href="/authors/view/@author.Id" class="btn btn-primary"><span class="oi oi-file"></span></a>
                            <AuthorizeView Roles="Administrator">
                                <a href="/authors/edit/@author.Id" class="btn btn-warning"><span class="oi oi-pencil"></span></a>
                                <a href="/authors/delete/@author.Id" class="btn btn-danger"><span class="oi oi-trash"></span></a>
                            </AuthorizeView>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {

    private IList<Author> Model;

    protected async override Task OnInitializedAsync()
    {
        Model = await _repo.Get(Endpoints.AuthorsEnpoint);
    }

}
